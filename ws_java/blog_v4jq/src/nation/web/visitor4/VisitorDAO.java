package nation.web.visitor4;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import nation.web.notice3.NoticeVO;
import nation.web.tool.DBClose;
import nation.web.tool.DBOpen;

public class VisitorDAO {
  private Connection con = null; // DBMS 연결
  private PreparedStatement pstmt = null; // SQL 실행
  private ResultSet rs = null; // SELECT 결과를 저장
  private StringBuffer sql = null; // SQL 저장

  private DBOpen dbopen = null;
  private DBClose dbclose = null;

  public VisitorDAO() {
    dbopen = new DBOpen();
    dbclose = new DBClose();
  }

  public int insert(VisitorVO visitorVO) { // Call by Reference
    int count = 0; // 처리된 레코드 갯수

    try {
      con = dbopen.getConnection(); // 추가

      sql = new StringBuffer();
      sql.append(" INSERT INTO visitor(content, rname, passwd, home, email, rdate)");
      sql.append(" VALUES(?, ?, ?, ?, ?, now())");

      pstmt = con.prepareStatement(sql.toString()); // SQL 실행 객체 생성
      pstmt.setString(1, visitorVO.getContent());
      pstmt.setString(2, visitorVO.getRname());
      pstmt.setString(3, visitorVO.getPasswd());
      pstmt.setString(4, visitorVO.getHome());
      pstmt.setString(5, visitorVO.getEmail());

      count = pstmt.executeUpdate(); // INSERT, UPDATE, DELETE SQL 실행

    } catch (Exception e) {
      e.printStackTrace();
    } finally {
      dbclose.close(con, pstmt); // 추가
    }
    return count;
  }
  
  public ArrayList<VisitorVO> list() {

    ArrayList<VisitorVO> list = null;

    try {
      con = dbopen.getConnection(); // 추가

      sql = new StringBuffer();
      sql.append(" SELECT visitorno, content, rname, passwd, home, email, rdate"); // 맨 앞에 공백 한 칸이 있어야함.
      sql.append(" FROM visitor");
      sql.append(" ORDER BY visitorno DESC");

      pstmt = con.prepareStatement(sql.toString()); // SQL 실행 객체 생성
      rs = pstmt.executeQuery(); // SELECT SQL 실행

      list = new ArrayList<VisitorVO>();

      // 최초 호출시 첫번째 레코드로 이동하며 그 후 호출부터 다음 레코드로 자동 이동
      while (rs.next()) {
        VisitorVO visitorVO = new VisitorVO();
        // DBMS -> Java
        // 아주 중요한 코드이다 [rs.~]
        visitorVO.setVisitorno(rs.getInt("visitorno"));
        visitorVO.setContent(rs.getString("content"));
        visitorVO.setRname(rs.getString("rname"));
        visitorVO.setPasswd(rs.getString("passwd"));
        visitorVO.setHome(rs.getString("home"));
        visitorVO.setEmail(rs.getString("email"));
        visitorVO.setRdate(rs.getString("rdate"));

        list.add(visitorVO); // 저장
      }
    } catch (Exception e) {
      e.printStackTrace();
    } finally {
      dbclose.close(con, pstmt, rs);
    }
    return list;
  }
  
  /**
   * 한 건의 레코드 조회
   * @param visitorno
   * @return visitorVO
   */
  public VisitorVO read(int visitorno) {
    VisitorVO visitorVO = null; // 지역 변수

    try {
      con = dbopen.getConnection();

      sql = new StringBuffer();
      sql.append(" SELECT visitorno, content, rname, passwd, home, email, substring(rdate, 1, 10) as rdate"); // 맨 앞에 공백 한 칸이 있어야함.
      sql.append(" FROM visitor");
      sql.append(" WHERE visitorno = ?");

      pstmt = con.prepareStatement(sql.toString()); // SQL 실행 객체 생성
      pstmt.setInt(1, visitorno);
      rs = pstmt.executeQuery(); // SELECT SQL 실행

      if (rs.next()) { // 첫번째 레코드로 이동
        visitorVO = new VisitorVO(); // 레코드에 대응할 객체 생성
        // DBMS 컬럼의 값 -> JAVA 변수의 값으로 대입합니다.
        visitorVO.setVisitorno(rs.getInt("visitorno"));
        visitorVO.setContent(rs.getString("content"));
        visitorVO.setRname(rs.getString("rname"));
        visitorVO.setPasswd(rs.getString("passwd"));
        visitorVO.setHome(rs.getString("home"));
        visitorVO.setEmail(rs.getString("email"));
        visitorVO.setRdate(rs.getString("rdate"));
      }
    } catch (Exception e) {
      e.printStackTrace();
    } finally {
      dbclose.close(con, pstmt, rs);
    }

    return visitorVO;
  }
  
  public int update(VisitorVO visitorVO) { // Call By Reference
    int count = 0; // 처리된 레코드 갯수

    try {
      con = dbopen.getConnection();
      
      sql = new StringBuffer();
      sql.append(" UPDATE visitor");
      sql.append(" SET content = ?, rname = ?, home=?, email=?");
      sql.append(" WHERE visitorno = ?");

      pstmt = con.prepareStatement(sql.toString()); // SQL 실행 객체 생성
      
      pstmt.setString(1, visitorVO.getContent()); // pstmt.setString(1, title);
      pstmt.setString(2, visitorVO.getRname()); // pstmt.setString(2, rname);
      pstmt.setString(3, visitorVO.getEmail()); // pstmt.setString(2, rname);
      pstmt.setInt(4, visitorVO.getVisitorno()); // pstmt.setInt(3, noticeno);

      count = pstmt.executeUpdate(); // INSERT, UPDATE, DELETE SQL 실행

    } catch (Exception e) {
      e.printStackTrace();
    } finally {
      dbclose.close(con, pstmt);
    }

    return count;
  }
  
}